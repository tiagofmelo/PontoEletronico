@model IEnumerable<PontoEletronico.Models.TimesheetModel>

@{
    ViewBag.Title = "Home";
}

<div align="center">
    <div class="box-header">
        <div style="float: left;">
            <img src="~/logo.png" class="logo" />
        </div>
        <div style="float: right;">
            <button class="glyphicon glyphicon-remove-sign button-exit" aria-hidden="true"></button>
        </div>
    </div>
    <div class="box-time">
        <div>
            <p id="time"></p>
        </div>
        <div style="width: 6em;"></div>
        <div>
            <p id="totalTime"></p>
        </div>
    </div>
    <div class="box-button">
        <div class="">
            <button type="submit" class="btn btn-primary button">CHEGUEI</button>
        </div>
        <div class="">
            <button type="submit" class="btn btn-primary button">FUI ALMOÇAR</button>
        </div>
        <div class="">
            <button type="submit" class="btn btn-primary button">VOLTEI</button>
        </div>
        <div class="">
            <button type="submit" class="btn btn-primary button">FUI</button>
        </div>
    </div>
</div>

<div class="table-box">
    <table class="table">
        <tr>
            <th>DATA</th>
            <th>HORA INÍCIO</th>
            <th>ALMOÇO INÍCIO</th>
            <th>ALMOÇO FIM</th>
            <th>HORA FIM</th>
            <th>TEMPO</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.date)</td>
                <td>@Html.DisplayFor(modelItem => item.start)</td>
                <td>@Html.DisplayFor(modelItem => item.startLunch)</td>
                <td>@Html.DisplayFor(modelItem => item.endLunch)</td>
                <td>@Html.DisplayFor(modelItem => item.end)</td>
                <td>@Html.DisplayFor(modelItem => item.totalTime)</td>
            </tr>
        }
    </table>
</div>

<style>
    .box-header {
        width: 100%;
        padding-top: 3em;
        padding-bottom: 5em;
    }

    .box-time {
        display: flex;
        justify-content: center;
    }

    .box-button {
        display: flex;
        justify-content: space-between;
        width: 50em;
        padding: 1rem;
    }

    .button-exit {
        color: #fccd2a;
        font-size: 2.5em;
        background-color: #1e5084;
        border: none;
    }

    .button {
        color: #ffff;
        background-color: #1e5084;
        width: 10em;
        border: solid;
        border-color: #fccd2a;
    }

        .button:hover {
            background-color: #fccd2a;
            color: #1e5084;
        }

        .button:focus {
            border-color: #1e5084;
            background-color: #fccd2a;
            color: #1e5084;
        }

    .table-box {
        background: #ffff;
    }

    th {
        border: solid;
        border-color: #1e5084 !important;
        background-color: #1e5084;
        color: #fccd2a;
    }

    td {
        border: solid;
        border-color: #1e5084;
    }

    #time {
        font-size: 1.5em;
        color: #ffff;
    }

    #totalTime {
        font-size: 1.5em;
        color: #fccd2a;
    }
</style>

<script>
    var timeDisplay = document.getElementById("time");
    var totalTime = document.getElementById("totalTime");

    function refreshTime() {
        var now = new Date();
        var dateStringNow = now.toLocaleString("pt-BR", { timeZone: "America/Sao_Paulo" });
        var formattedStringNow = dateStringNow.replace(",", " ");

        timeDisplay.innerHTML = formattedStringNow;
        totalTime.innerHTML = 'Tempo ' + '@Model.LastOrDefault().totalTime';
    }

    setInterval(refreshTime, 1000);
</script>